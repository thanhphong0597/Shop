// <auto-generated />
using DoAn.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DoAn.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Giay",
                            Slug = "giay"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Ao",
                            Slug = "ao"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Quan",
                            Slug = "quan"
                        });
                });

            modelBuilder.Entity("DoAn.Entities.Color", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorID = 1,
                            Name = "do"
                        },
                        new
                        {
                            ColorID = 2,
                            Name = "vang"
                        },
                        new
                        {
                            ColorID = 3,
                            Name = "cam"
                        });
                });

            modelBuilder.Entity("DoAn.Entities.GenericShoes", b =>
                {
                    b.Property<int>("GenericShoesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenericShoesID"), 1L, 1);

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenericShoesID");

                    b.HasIndex("Category_ID");

                    b.ToTable("GenericShoes");

                    b.HasData(
                        new
                        {
                            GenericShoesID = 1,
                            Category_ID = 1,
                            Detail = "...",
                            Images = "...",
                            Name = "Giay Nike",
                            Slug = "giay_nike"
                        },
                        new
                        {
                            GenericShoesID = 2,
                            Category_ID = 1,
                            Detail = "...",
                            Images = "...",
                            Name = "Giay Jordan",
                            Slug = "giay_jordan"
                        },
                        new
                        {
                            GenericShoesID = 3,
                            Category_ID = 2,
                            Detail = "...",
                            Images = "...",
                            Name = "Ao Nike lon",
                            Slug = "ao_nike"
                        },
                        new
                        {
                            GenericShoesID = 4,
                            Category_ID = 3,
                            Detail = "...",
                            Images = "...",
                            Name = "Quan Nike",
                            Slug = "quan_nike"
                        });
                });

            modelBuilder.Entity("DoAn.Entities.Size", b =>
                {
                    b.Property<int>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            SizeID = 1,
                            Name = "38"
                        },
                        new
                        {
                            SizeID = 2,
                            Name = "39"
                        },
                        new
                        {
                            SizeID = 3,
                            Name = "40"
                        },
                        new
                        {
                            SizeID = 4,
                            Name = "41"
                        });
                });

            modelBuilder.Entity("DoAn.Entities.SubTable.SpecificShoes", b =>
                {
                    b.Property<int>("ShoesID")
                        .HasColumnType("int");

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<int>("SizeID")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ShoesID", "ColorID", "SizeID");

                    b.HasIndex("ColorID");

                    b.HasIndex("SizeID");

                    b.ToTable("SpecificShoes", (string)null);

                    b.HasData(
                        new
                        {
                            ShoesID = 1,
                            ColorID = 1,
                            SizeID = 1,
                            Price = 20000f,
                            Stock = 3
                        },
                        new
                        {
                            ShoesID = 1,
                            ColorID = 1,
                            SizeID = 2,
                            Price = 20000f,
                            Stock = 2
                        },
                        new
                        {
                            ShoesID = 1,
                            ColorID = 2,
                            SizeID = 3,
                            Price = 20000f,
                            Stock = 5
                        },
                        new
                        {
                            ShoesID = 2,
                            ColorID = 1,
                            SizeID = 2,
                            Price = 20000f,
                            Stock = 1
                        },
                        new
                        {
                            ShoesID = 2,
                            ColorID = 3,
                            SizeID = 1,
                            Price = 20000f,
                            Stock = 6
                        });
                });

            modelBuilder.Entity("DoAn.Entities.GenericShoes", b =>
                {
                    b.HasOne("DoAn.Entities.Category", "Category")
                        .WithMany("GenericShoes")
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DoAn.Entities.SubTable.SpecificShoes", b =>
                {
                    b.HasOne("DoAn.Entities.Color", "Color")
                        .WithMany("SpecificShoeses")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Entities.GenericShoes", "GenericShoes")
                        .WithMany("SpecificShoeses")
                        .HasForeignKey("ShoesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Entities.Size", "Size")
                        .WithMany("SpecificShoeses")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("GenericShoes");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DoAn.Entities.Category", b =>
                {
                    b.Navigation("GenericShoes");
                });

            modelBuilder.Entity("DoAn.Entities.Color", b =>
                {
                    b.Navigation("SpecificShoeses");
                });

            modelBuilder.Entity("DoAn.Entities.GenericShoes", b =>
                {
                    b.Navigation("SpecificShoeses");
                });

            modelBuilder.Entity("DoAn.Entities.Size", b =>
                {
                    b.Navigation("SpecificShoeses");
                });
#pragma warning restore 612, 618
        }
    }
}
